// <auto-generated />
using System;
using Game.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Game.DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221214155521_2emeMigration")]
    partial class _2emeMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Game.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("commentId");

                    b.Property<int?>("VideoGameId")
                        .HasColumnType("int");

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<double>("grade")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("VideoGameId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Game.Entities.Plateform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("plateformId");

                    b.Property<string>("plateformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("plateform");
                });

            modelBuilder.Entity("Game.Entities.VideoGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("gameId");

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("plateformId")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("plateformId");

                    b.ToTable("VideoGame");
                });

            modelBuilder.Entity("Game.Entities.Comment", b =>
                {
                    b.HasOne("Game.Entities.VideoGame", null)
                        .WithMany("commentList")
                        .HasForeignKey("VideoGameId");
                });

            modelBuilder.Entity("Game.Entities.VideoGame", b =>
                {
                    b.HasOne("Game.Entities.Plateform", "plateform")
                        .WithMany()
                        .HasForeignKey("plateformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("plateform");
                });

            modelBuilder.Entity("Game.Entities.VideoGame", b =>
                {
                    b.Navigation("commentList");
                });
#pragma warning restore 612, 618
        }
    }
}
